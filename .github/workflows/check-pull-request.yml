name: Build and Deploy to GitHub Container Registry test F.

on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: 'europe-west6-docker.pkg.dev'
  OWNER: 'mumble1/mumble-docker'
  REPOSITORY: 'app-pizza-hawaii'

jobs:
  build:
    name: Setup and test code quality
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://npm.pkg.github.com/
          scope: '@smartive-education'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Prettier
        run: npm run prettier

      - name: Lint
        run: npm run lint

  run-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        if: env.REGISTRY == 'europe-west6-docker.pkg.dev'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/654053669202/locations/global/workloadIdentityPools/casfee23-pool/providers/casfee23-provider'
          service_account: 'casfee23-account@project-pizza-388116.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: Login to GitHub Container Registry
        if: env.REGISTRY != 'europe-west6-docker.pkg.dev'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.NPM_TOKEN }}


      - name: Login to GitHub Container Registry
        if: env.REGISTRY == 'europe-west6-docker.pkg.dev'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Build and push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          secrets: |
            "npm_token=${{ secrets.NPM_TOKEN }}"
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.REPOSITORY }}:latest #,${{ github.sha }}



  # playwright:
  #   name: 'Playwright Tests'
  #   runs-on: ubuntu-latest
  #   container:
  #      images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.REPOSITORY }}:test

  #   steps:
  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps

  #     - name: Run Playwright tests
  #       run: npx playwright test
  #       env:
  #         NEXT_PUBLIC_VERCEL_URL: ${{ env.NEXT_PUBLIC_VERCEL_URL }}
  #         ZITADEL_USERNAME: ${{ env.ZITADEL_USERNAME }}
  #         ZITADEL_PASSWORD: ${{ env.ZITADEL_PASSWORD }}

  #     - name: 'Upload Artifact'
  #       uses: actions/upload-artifact@v3
  #       if: failure()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 5
