name: Build and Deploy to GitHub Container Registry

on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: 'ghcr.io'
  OWNER: 'smartive-education'
  REPOSITORY: 'app-pizza-hawaii'

jobs:
  build:
    name: Setup and test code quality
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://npm.pkg.github.com/
          scope: '@smartive-education'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ env.NPM_TOKEN }}

      - name: Prettier
        run: npm run prettier

      - name: Lint
        run: npm run lint

  run-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.NPM_TOKEN }}

      - name: Create npmrc file
        run: echo ${{ env.NPM_RC }} > .npmrc

      - name: Build and push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          secret-files: |
            "npmrc=./.npmrc"
          tags: ${{ env.OWNER }}/${{ env.REPOSITORY }}:test

      - name: Remove npmrc file
        run: rm .npmrc

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v4
      #   with:
      #     images: ${{ env.OWNER }}/${{ env.REPOSITORY }}:test

      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}

  # playwright:
  #   name: 'Playwright Tests'
  #   runs-on: ubuntu-latest
  #   container:
  #      images: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.REPOSITORY }}:test

  #   steps:
  #     - name: Install Playwright Browsers
  #       run: npx playwright install --with-deps

  #     - name: Run Playwright tests
  #       run: npx playwright test
  #       env:
  #         NEXT_PUBLIC_VERCEL_URL: ${{ env.NEXT_PUBLIC_VERCEL_URL }}
  #         ZITADEL_USERNAME: ${{ env.ZITADEL_USERNAME }}
  #         ZITADEL_PASSWORD: ${{ env.ZITADEL_PASSWORD }}

  #     - name: 'Upload Artifact'
  #       uses: actions/upload-artifact@v3
  #       if: failure()
  #       with:
  #         name: playwright-report
  #         path: playwright-report/
  #         retention-days: 5
