name: Deploy Docker Container with Terraform to GCP

on:
  workflow_call:
    inputs:
      hoster:
        type: string
        description: 'The environment to deploy to'
        required: true
        default: 'vercel' # 'vercel' or 'google-cloud'

      environment:
        type: string
        description: 'The environment to deploy to'
        default: 'production' # 'production' or 'preview'

      url:
        type: string
        description: 'The url of the environment'
        default: 'http://localhost:3000'

      image:
        type: string
        description: 'The image to deploy'
        default: 'europe-west6-docker.pkg.dev/smartive-education/app-pizza-hawaii:latest'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  NEXT_PUBLIC_QWACKER_API_URL: ${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }}
  ZITADEL_ISSUER: ${{ secrets.ZITADEL_ISSUER }}
  ZITADEL_CLIENT_ID: ${{ secrets.ZITADEL_CLIENT_ID }}
  NEXT_PUBLIC_VERCEL_URL: ${{ secrets.NEXT_PUBLIC_VERCEL_URL }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

concurrency:
  group: 'release'
  cancel-in-progress: true

permissions: write-all

jobs:
  Deploy-Vercel:
    runs-on: ubuntu-latest
    if: ${{ inputs.hoster == 'vercel' }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          registry-url: https://npm.pkg.github.com/
          scope: '@smartive-education'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=${{ inputs.environment }} --token=${{ env.VERCEL_TOKEN }}

      - name: Build Project Artifacts (production)
        if: ${{ inputs.environment == 'production' }}
        run: vercel build --prod --token=${{ env.VERCEL_TOKEN }}

      - name: Build Project Artifacts (preview)
        if: ${{ inputs.environment == 'preview' }}
        run: vercel build --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel (production)
        if: ${{ inputs.environment == 'production' }}
        run: vercel deploy --prebuilt --prod --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel (preview)
        if: ${{ inputs.environment == 'preview' }}
        run: vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: npm-logs
          path: ~/.npm/_logs
          retention-days: 5

  Deploy-Google-Cloud:
    runs-on: ubuntu-latest
    if: ${{ inputs.hoster == 'google-cloud' }}
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/654053669202/locations/global/workloadIdentityPools/casfee23-pool/providers/casfee23-provider'
          service_account: 'casfee23-account@project-pizza-388116.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: Install the App on Artifact Registry a cloudRun Container with terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure Google Cloud credentials
        run: terraform init

      - name: Validate Terraform configuration
        run: terraform validate

      - name: Deploy Terraform configuration
        run: terraform apply -auto-approve -var IMAGE=${{ inputs.image }} -var NEXT_PUBLIC_VERCEL_URL=${{ inputs.url }} -var NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} -var ZITADEL_ISSUER=${{ secrets.ZITADEL_ISSUER }} -var ZITADEL_CLIENT_ID=${{ secrets.ZITADEL_CLIENT_ID }} -var NEXT_PUBLIC_QWACKER_API_URL=${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }} -var NEXTAUTH_URL=${{ inputs.url }}
